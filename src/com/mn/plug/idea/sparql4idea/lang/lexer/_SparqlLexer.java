/* The following code was generated by JFlex 1.6.0 */

package com.mn.plug.idea.sparql4idea.lang.lexer;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.tree.IElementType;

import static com.mn.plug.idea.sparql4idea.lang.Sparql.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.6.0
 * from the specification file <tt>/home/akovrov/Documents/proj/opensource/sparql-idea-plugin/src/com/mn/plug/idea/sparql4idea/lang/lexer/_SparqlLexer.flex</tt>
 */
@SuppressWarnings("all")
class _SparqlLexer implements FlexLexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;
  public static final int PNAME_NS = 2;
  public static final int PNAME_LN = 4;
  public static final int PNAME_LN2 = 6;
  public static final int IRI_REF_BODY = 8;
  public static final int IRI_REF_END = 10;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0,  0,  1,  1,  2,  2,  3,  3,  4,  4,  5, 5
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\1\1\25\1\17\1\113\1\113\1\17\22\1\1\25\1\106\1\20"+
    "\1\112\1\6\1\0\1\104\1\16\1\23\1\24\1\107\1\14\1\102"+
    "\1\11\1\13\1\110\1\12\1\71\1\72\1\74\1\76\1\70\1\73"+
    "\1\12\1\75\1\12\1\4\1\101\1\2\1\105\1\3\1\6\1\7"+
    "\1\34\1\32\1\46\1\54\1\15\1\41\1\62\1\61\1\43\1\10"+
    "\1\55\1\45\1\57\1\52\1\51\1\36\1\10\1\37\1\35\1\47"+
    "\1\53\1\64\1\60\1\44\1\56\1\67\1\26\1\21\1\27\1\111"+
    "\1\5\1\1\1\63\1\33\1\65\1\54\1\15\1\42\1\62\1\61"+
    "\1\43\1\10\1\55\1\45\1\57\1\22\1\51\1\36\1\10\1\40"+
    "\1\66\1\50\1\53\1\64\1\60\1\44\1\56\1\67\1\77\1\103"+
    "\1\100\7\0\1\114\44\0\1\115\12\0\1\115\1\0\1\31\2\0"+
    "\1\115\5\0\27\116\1\0\3\115\34\116\1\0\u01ca\116\4\30\14\116"+
    "\16\30\5\116\7\30\1\116\1\30\1\116\21\30\160\31\5\116\1\30"+
    "\2\116\2\30\4\116\1\0\1\116\6\30\1\116\1\30\3\116\1\30"+
    "\1\116\1\30\24\116\1\30\123\116\1\30\213\116\10\30\246\116\1\30"+
    "\46\116\2\30\1\116\7\30\47\116\110\30\33\116\5\30\3\116\55\30"+
    "\53\116\43\30\2\116\1\30\143\116\1\30\1\116\17\30\2\116\7\30"+
    "\2\116\12\30\3\116\2\30\1\116\20\30\1\116\1\30\36\116\35\30"+
    "\131\116\13\30\1\116\30\30\41\116\11\30\2\116\4\30\1\116\5\30"+
    "\26\116\4\30\1\116\11\30\1\116\3\30\1\116\27\30\31\116\107\30"+
    "\23\116\121\30\66\116\3\30\1\116\22\30\1\116\7\30\12\116\17\30"+
    "\20\116\4\30\10\116\2\30\2\116\2\30\26\116\1\30\7\116\1\30"+
    "\1\116\3\30\4\116\3\30\1\116\20\30\1\116\15\30\2\116\1\30"+
    "\3\116\16\30\2\116\23\30\6\116\4\30\2\116\2\30\26\116\1\30"+
    "\7\116\1\30\2\116\1\30\2\116\1\30\2\116\37\30\4\116\1\30"+
    "\1\116\23\30\3\116\20\30\11\116\1\30\3\116\1\30\26\116\1\30"+
    "\7\116\1\30\2\116\1\30\5\116\3\30\1\116\22\30\1\116\17\30"+
    "\2\116\43\30\10\116\2\30\2\116\2\30\26\116\1\30\7\116\1\30"+
    "\2\116\1\30\5\116\3\30\1\116\36\30\2\116\1\30\3\116\17\30"+
    "\1\116\21\30\1\116\1\30\6\116\3\30\3\116\1\30\4\116\3\30"+
    "\2\116\1\30\1\116\1\30\2\116\3\30\2\116\3\30\3\116\3\30"+
    "\14\116\26\30\1\116\64\30\10\116\1\30\3\116\1\30\27\116\1\30"+
    "\20\116\3\30\1\116\32\30\2\116\6\30\2\116\43\30\10\116\1\30"+
    "\3\116\1\30\27\116\1\30\12\116\1\30\5\116\3\30\1\116\40\30"+
    "\1\116\1\30\2\116\17\30\2\116\22\30\10\116\1\30\3\116\1\30"+
    "\51\116\2\30\1\116\20\30\1\116\21\30\2\116\30\30\6\116\5\30"+
    "\22\116\3\30\30\116\1\30\11\116\1\30\1\116\2\30\7\116\72\30"+
    "\60\116\1\30\2\116\14\30\7\116\72\30\2\116\1\30\1\116\2\30"+
    "\2\116\1\30\1\116\2\30\1\116\6\30\4\116\1\30\7\116\1\30"+
    "\3\116\1\30\1\116\1\30\1\116\2\30\2\116\1\30\4\116\1\30"+
    "\2\116\11\30\1\116\2\30\5\116\1\30\1\116\25\30\4\116\40\30"+
    "\1\116\77\30\10\116\1\30\44\116\33\30\5\116\163\30\53\116\24\30"+
    "\1\116\20\30\6\116\4\30\4\116\3\30\1\116\3\30\2\116\7\30"+
    "\3\116\4\30\15\116\14\30\1\116\21\30\46\116\1\30\1\116\5\30"+
    "\1\116\2\30\53\116\1\30\u014d\116\1\30\4\116\2\30\7\116\1\30"+
    "\1\116\1\30\4\116\2\30\51\116\1\30\4\116\2\30\41\116\1\30"+
    "\4\116\2\30\7\116\1\30\1\116\1\30\4\116\2\30\17\116\1\30"+
    "\71\116\1\30\4\116\2\30\103\116\45\30\20\116\20\30\125\116\14\30"+
    "\u026c\116\2\30\21\116\1\30\32\116\5\30\113\116\6\30\10\116\7\30"+
    "\15\116\1\30\4\116\16\30\22\116\16\30\22\116\16\30\15\116\1\30"+
    "\3\116\17\30\64\116\43\30\1\116\4\30\1\116\103\30\130\116\10\30"+
    "\51\116\1\30\1\116\5\30\106\116\12\30\37\116\61\30\36\116\2\30"+
    "\5\116\13\30\54\116\25\30\7\116\70\30\27\116\11\30\65\116\122\30"+
    "\1\116\135\30\57\116\21\30\7\116\67\30\36\116\15\30\2\116\12\30"+
    "\54\116\32\30\44\116\51\30\3\116\12\30\44\116\153\30\4\116\1\30"+
    "\4\116\3\30\2\116\11\30\300\116\100\30\u0116\116\2\30\6\116\2\30"+
    "\46\116\2\30\6\116\2\30\10\116\1\30\1\116\1\30\1\116\1\30"+
    "\1\116\1\30\37\116\2\30\65\116\1\30\7\116\1\30\1\116\3\30"+
    "\3\116\1\30\7\116\3\30\4\116\2\30\6\116\4\30\15\116\5\30"+
    "\3\116\1\30\7\116\3\30\14\0\2\30\32\0\1\114\1\114\25\0"+
    "\2\31\57\0\1\30\1\116\15\30\1\116\20\30\15\116\145\30\1\116"+
    "\4\30\1\116\2\30\12\116\1\30\1\116\3\30\5\116\6\30\1\116"+
    "\1\30\1\116\1\30\1\116\1\30\4\116\1\30\13\116\2\30\4\116"+
    "\5\30\5\116\4\30\1\116\64\30\2\116\13\30\u0a70\0\57\116\1\30"+
    "\57\116\1\30\205\116\6\30\4\116\3\30\2\116\14\30\46\116\1\30"+
    "\1\116\5\30\1\116\2\30\70\116\7\30\1\116\20\30\27\116\11\30"+
    "\7\116\1\30\7\116\1\30\7\116\1\30\7\116\1\30\7\116\1\30"+
    "\7\116\1\30\7\116\1\30\7\116\120\30\1\116\u01c0\30\21\0\4\30"+
    "\2\116\52\30\5\116\5\30\2\116\4\30\126\116\6\30\3\116\1\30"+
    "\132\116\1\30\4\116\5\30\51\116\3\30\136\116\21\30\33\116\65\30"+
    "\20\116\u0200\30\u19b6\116\112\30\u51cd\116\63\30\u048d\116\103\30\56\116\2\30"+
    "\u010d\116\3\30\20\116\12\30\2\116\24\30\57\116\20\30\37\116\2\30"+
    "\106\116\61\30\11\116\2\30\147\116\2\30\4\116\1\30\36\116\2\30"+
    "\2\116\105\30\13\116\1\30\3\116\1\30\4\116\1\30\27\116\35\30"+
    "\64\116\16\30\62\116\76\30\6\116\3\30\1\116\16\30\34\116\12\30"+
    "\27\116\31\30\35\116\7\30\57\116\34\30\1\116\20\30\5\116\1\30"+
    "\12\116\12\30\5\116\1\30\51\116\27\30\3\116\1\30\10\116\24\30"+
    "\27\116\3\30\1\116\3\30\62\116\1\30\1\116\3\30\2\116\2\30"+
    "\5\116\2\30\1\116\1\30\1\116\30\30\3\116\2\30\13\116\7\30"+
    "\3\116\14\30\6\116\2\30\6\116\2\30\6\116\11\30\7\116\1\30"+
    "\7\116\1\30\53\116\1\30\4\116\4\30\2\116\132\30\43\116\35\30"+
    "\u2ba4\116\14\30\27\116\4\30\61\116\4\30\u2100\0\u016e\116\2\30\152\116"+
    "\46\30\7\116\14\30\5\116\5\30\1\116\1\30\12\116\1\30\15\116"+
    "\1\30\5\116\1\30\1\116\1\30\2\116\1\30\2\116\1\30\154\116"+
    "\41\30\u016b\116\22\30\100\116\2\30\66\116\10\30\40\0\14\116\164\30"+
    "\5\116\1\30\207\116\44\30\32\116\6\30\32\116\13\30\131\116\3\30"+
    "\6\116\2\30\6\116\2\30\6\116\2\30\3\116\41\30\2\0\14\115"+
    "\1\0\32\115\1\0\23\115\1\0\2\115\1\0\17\115\2\0\16\115"+
    "\42\0\173\115\u0185\0\35\115\3\0\61\115\57\0\40\115\20\0\21\115"+
    "\1\0\10\115\6\0\46\115\12\0\36\115\2\0\44\115\4\0\10\115"+
    "\60\0\236\115\142\0\50\115\10\0\64\115\234\0\u0137\115\11\0\26\115"+
    "\12\0\10\115\230\0\6\115\2\0\1\115\1\0\54\115\1\0\2\115"+
    "\3\0\1\115\2\0\27\115\12\0\27\115\11\0\37\115\141\0\26\115"+
    "\12\0\32\115\106\0\70\115\6\0\2\115\100\0\1\115\17\0\4\115"+
    "\1\0\3\115\1\0\33\115\54\0\35\115\3\0\35\115\43\0\10\115"+
    "\1\0\34\115\33\0\66\115\12\0\26\115\12\0\23\115\15\0\22\115"+
    "\156\0\111\115\u03ba\0\65\115\113\0\55\115\40\0\31\115\32\0\44\115"+
    "\51\0\43\115\3\0\1\115\14\0\60\115\16\0\4\115\25\0\1\115"+
    "\45\0\22\115\1\0\31\115\204\0\57\115\46\0\10\115\2\0\2\115"+
    "\2\0\26\115\1\0\7\115\1\0\2\115\1\0\5\115\3\0\1\115"+
    "\37\0\5\115\u011e\0\60\115\24\0\2\115\1\0\1\115\270\0\57\115"+
    "\121\0\60\115\24\0\1\115\73\0\53\115\u01f5\0\100\115\37\0\1\115"+
    "\u01c0\0\71\115\u0507\0\u0399\115\u0c67\0\u042f\115\u33d1\0\u0239\115\7\0\37\115"+
    "\161\0\36\115\22\0\60\115\20\0\4\115\37\0\25\115\5\0\23\115"+
    "\u0370\0\105\115\13\0\1\115\102\0\15\115\u4060\0\2\115\u0bfe\0\153\115"+
    "\5\0\15\115\3\0\11\115\7\0\12\115\u1766\0\125\115\1\0\107\115"+
    "\1\0\2\115\2\0\1\115\2\0\2\115\2\0\4\115\1\0\14\115"+
    "\1\0\1\115\1\0\7\115\1\0\101\115\1\0\4\115\2\0\10\115"+
    "\1\0\7\115\1\0\34\115\1\0\4\115\1\0\5\115\1\0\1\115"+
    "\3\0\7\115\1\0\u0154\115\2\0\31\115\1\0\31\115\1\0\37\115"+
    "\1\0\31\115\1\0\37\115\1\0\31\115\1\0\37\115\1\0\31\115"+
    "\1\0\37\115\1\0\31\115\1\0\10\115\u1034\0\305\115\u053b\0\4\115"+
    "\1\0\33\115\1\0\2\115\1\0\1\115\2\0\1\115\1\0\12\115"+
    "\1\0\4\115\1\0\1\115\1\0\1\115\6\0\1\115\4\0\1\115"+
    "\1\0\1\115\1\0\1\115\1\0\3\115\1\0\2\115\1\0\1\115"+
    "\2\0\1\115\1\0\1\115\1\0\1\115\1\0\1\115\1\0\1\115"+
    "\1\0\2\115\1\0\1\115\2\0\4\115\1\0\7\115\1\0\4\115"+
    "\1\0\4\115\1\0\1\115\1\0\12\115\1\0\21\115\5\0\3\115"+
    "\1\0\5\115\1\0\21\115\u1144\0\ua6d7\115\51\0\u1035\115\13\0\336\115"+
    "\u3fe2\0\u021e\115\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\u05f0\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\4\0\1\1\1\0\1\2\1\3\1\4\1\5\3\2"+
    "\1\6\1\7\1\10\1\11\1\12\1\6\1\2\1\13"+
    "\1\2\1\6\1\14\1\15\1\16\1\17\1\2\22\6"+
    "\1\20\1\6\1\21\1\22\1\23\1\24\2\2\1\25"+
    "\1\26\1\27\1\30\1\2\1\31\1\6\1\32\1\33"+
    "\1\32\1\34\1\35\1\1\1\36\1\0\1\37\1\40"+
    "\1\41\1\42\1\0\1\43\1\44\2\0\1\45\1\0"+
    "\1\46\1\0\1\47\1\0\2\6\1\0\1\50\2\0"+
    "\1\50\1\0\2\6\1\0\1\51\1\0\1\52\4\6"+
    "\1\53\25\6\1\54\1\55\12\6\1\56\26\6\1\57"+
    "\1\60\1\61\1\62\1\63\4\0\1\64\1\0\1\65"+
    "\2\0\1\66\1\67\1\0\2\6\1\50\2\0\1\6"+
    "\1\70\1\71\4\6\1\72\1\73\1\74\1\75\1\76"+
    "\5\6\1\77\1\6\1\100\51\6\1\101\3\6\1\102"+
    "\1\103\2\6\1\104\7\6\1\0\1\44\1\0\1\105"+
    "\1\0\1\106\2\6\4\0\2\6\1\107\1\110\17\6"+
    "\1\0\1\111\2\0\4\6\1\112\2\6\1\113\1\6"+
    "\1\114\6\6\1\115\2\6\1\116\1\117\6\6\1\120"+
    "\1\6\1\121\7\6\1\122\1\123\2\6\1\124\1\125"+
    "\1\6\1\126\2\6\1\127\1\130\10\6\2\0\1\131"+
    "\1\132\1\133\15\6\1\134\1\6\3\0\3\6\1\135"+
    "\1\136\1\137\4\6\1\140\1\6\1\141\1\6\1\142"+
    "\1\143\1\6\1\144\4\6\1\145\2\6\1\146\1\6"+
    "\1\147\1\150\1\151\5\6\1\152\1\6\1\153\1\154"+
    "\1\6\1\155\1\156\1\157\2\6\1\160\1\6\1\161"+
    "\2\6\1\162\1\163\4\6\1\164\2\6\1\165\1\166"+
    "\1\167\1\170\1\171\2\6\1\172\1\173\4\6\1\174"+
    "\1\6\1\175\4\6\1\176\2\6\1\177\3\6\1\200"+
    "\1\0\1\201\1\0\1\202\1\203\1\6\1\204\3\6"+
    "\1\205\1\206\1\207\1\210\1\6\1\211\10\6\1\212"+
    "\2\6\1\213\2\0\1\214\1\6\1\215\5\6\1\216"+
    "\1\217\1\220\1\221\1\222\1\223\1\224\2\0\1\225"+
    "\1\226\1\227\1\230\1\6\1\231\2\0\1\6\2\0"+
    "\1\232\2\0\1\233\1\0\1\234";

  private static int [] zzUnpackAction() {
    int [] result = new int[524];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /**
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\117\0\236\0\355\0\u013c\0\u018b\0\u01da\0\u0229"+
    "\0\u0278\0\u02c7\0\u0316\0\u0365\0\u03b4\0\u0403\0\u0452\0\u04a1"+
    "\0\u04f0\0\u053f\0\u058e\0\u05dd\0\u01da\0\u062c\0\u067b\0\u06ca"+
    "\0\u01da\0\u0719\0\u01da\0\u0768\0\u07b7\0\u0806\0\u0855\0\u08a4"+
    "\0\u08f3\0\u0942\0\u0991\0\u09e0\0\u0a2f\0\u0a7e\0\u0acd\0\u0b1c"+
    "\0\u0b6b\0\u0bba\0\u0c09\0\u0c58\0\u0ca7\0\u0cf6\0\u0806\0\u0d45"+
    "\0\u01da\0\u01da\0\u01da\0\u01da\0\u0d94\0\u0de3\0\u01da\0\u0e32"+
    "\0\u01da\0\u01da\0\u0e81\0\u0ed0\0\u0f1f\0\u01da\0\u01da\0\u0f6e"+
    "\0\u01da\0\u0fbd\0\u100c\0\u01da\0\u105b\0\u01da\0\u105b\0\u01da"+
    "\0\u10aa\0\u10f9\0\u1148\0\u1197\0\u0768\0\u11e6\0\u1235\0\u1284"+
    "\0\u12d3\0\u1322\0\u1371\0\u13c0\0\u140f\0\u145e\0\u14ad\0\u14fc"+
    "\0\u154b\0\u159a\0\u15e9\0\u1638\0\u1687\0\u16d6\0\u06ca\0\u01da"+
    "\0\u0719\0\u01da\0\u1725\0\u1774\0\u17c3\0\u1812\0\u0403\0\u1861"+
    "\0\u18b0\0\u18ff\0\u194e\0\u199d\0\u19ec\0\u1a3b\0\u1a8a\0\u1ad9"+
    "\0\u1b28\0\u1b77\0\u1bc6\0\u1c15\0\u1c64\0\u1cb3\0\u1d02\0\u1d51"+
    "\0\u1da0\0\u1def\0\u1e3e\0\u1e8d\0\u0403\0\u1e3e\0\u1edc\0\u1f2b"+
    "\0\u1f7a\0\u1fc9\0\u2018\0\u2067\0\u20b6\0\u2105\0\u2154\0\u21a3"+
    "\0\u0403\0\u21f2\0\u2241\0\u2290\0\u22df\0\u232e\0\u237d\0\u23cc"+
    "\0\u241b\0\u246a\0\u24b9\0\u2508\0\u2557\0\u25a6\0\u25f5\0\u2644"+
    "\0\u2693\0\u26e2\0\u2731\0\u2780\0\u27cf\0\u281e\0\u286d\0\u01da"+
    "\0\u01da\0\u01da\0\u01da\0\u01da\0\u0f6e\0\u28bc\0\u0fbd\0\u10aa"+
    "\0\u290b\0\u295a\0\u29a9\0\u29f8\0\u2a47\0\u2a47\0\u2a96\0\u2ae5"+
    "\0\u2b34\0\u2b83\0\u01da\0\u2bd2\0\u2c21\0\u2c70\0\u0403\0\u0403"+
    "\0\u2cbf\0\u2d0e\0\u2d5d\0\u2dac\0\u0403\0\u0403\0\u0403\0\u0403"+
    "\0\u0403\0\u2dfb\0\u2e4a\0\u2e99\0\u2ee8\0\u2f37\0\u2f86\0\u2fd5"+
    "\0\u0403\0\u3024\0\u3073\0\u30c2\0\u3111\0\u3160\0\u31af\0\u31fe"+
    "\0\u324d\0\u329c\0\u32eb\0\u333a\0\u3389\0\u33d8\0\u3427\0\u3476"+
    "\0\u34c5\0\u3514\0\u3563\0\u35b2\0\u3601\0\u3650\0\u369f\0\u36ee"+
    "\0\u373d\0\u378c\0\u37db\0\u382a\0\u3879\0\u38c8\0\u3917\0\u3966"+
    "\0\u39b5\0\u3a04\0\u3a53\0\u3aa2\0\u3af1\0\u3b40\0\u3b8f\0\u3bde"+
    "\0\u3c2d\0\u3c7c\0\u0403\0\u3ccb\0\u3d1a\0\u3d69\0\u0403\0\u3db8"+
    "\0\u3e07\0\u3e56\0\u0768\0\u3ea5\0\u3ef4\0\u3f43\0\u3f92\0\u3fe1"+
    "\0\u4030\0\u407f\0\u290b\0\u40ce\0\u411d\0\u411d\0\u416c\0\u416c"+
    "\0\u41bb\0\u420a\0\u4259\0\u42a8\0\u42f7\0\u4346\0\u4395\0\u43e4"+
    "\0\u0403\0\u0403\0\u4433\0\u4482\0\u44d1\0\u4520\0\u456f\0\u45be"+
    "\0\u460d\0\u465c\0\u46ab\0\u46fa\0\u4749\0\u4798\0\u47e7\0\u4836"+
    "\0\u4885\0\u48d4\0\u0768\0\u4923\0\u4972\0\u49c1\0\u4a10\0\u4a5f"+
    "\0\u4aae\0\u0403\0\u4afd\0\u4b4c\0\u0403\0\u4b9b\0\u0403\0\u4bea"+
    "\0\u4c39\0\u4c88\0\u4cd7\0\u4d26\0\u4d75\0\u4dc4\0\u4e13\0\u4e62"+
    "\0\u0403\0\u0403\0\u4eb1\0\u4f00\0\u4f4f\0\u4f9e\0\u4fed\0\u503c"+
    "\0\u0403\0\u508b\0\u0403\0\u50da\0\u5129\0\u5178\0\u51c7\0\u5216"+
    "\0\u5265\0\u52b4\0\u0403\0\u5303\0\u5352\0\u53a1\0\u53f0\0\u0403"+
    "\0\u543f\0\u0403\0\u548e\0\u54dd\0\u0403\0\u0403\0\u552c\0\u557b"+
    "\0\u55ca\0\u5619\0\u5668\0\u56b7\0\u5706\0\u5755\0\u57a4\0\u57f3"+
    "\0\u0403\0\u0403\0\u0403\0\u5842\0\u5891\0\u58e0\0\u592f\0\u597e"+
    "\0\u59cd\0\u5a1c\0\u5a6b\0\u5aba\0\u5b09\0\u5b58\0\u5ba7\0\u5bf6"+
    "\0\u0403\0\u5c45\0\u5c94\0\u5ce3\0\u5d32\0\u5d81\0\u5dd0\0\u5e1f"+
    "\0\u0403\0\u0403\0\u0403\0\u5e6e\0\u5ebd\0\u5f0c\0\u5f5b\0\u0403"+
    "\0\u5faa\0\u0403\0\u5ff9\0\u0403\0\u0403\0\u6048\0\u0403\0\u6097"+
    "\0\u60e6\0\u6135\0\u6184\0\u0403\0\u61d3\0\u6222\0\u0403\0\u6271"+
    "\0\u0403\0\u0403\0\u0403\0\u62c0\0\u630f\0\u635e\0\u63ad\0\u63fc"+
    "\0\u0403\0\u644b\0\u0403\0\u0403\0\u649a\0\u0403\0\u0403\0\u64e9"+
    "\0\u6538\0\u6587\0\u0403\0\u65d6\0\u0403\0\u6625\0\u6674\0\u0403"+
    "\0\u0403\0\u66c3\0\u6712\0\u6761\0\u67b0\0\u0403\0\u67ff\0\u684e"+
    "\0\u0403\0\u0768\0\u0768\0\u0768\0\u0403\0\u689d\0\u68ec\0\u0403"+
    "\0\u0403\0\u693b\0\u698a\0\u69d9\0\u6a28\0\u0403\0\u6a77\0\u0403"+
    "\0\u6ac6\0\u6b15\0\u6b64\0\u6bb3\0\u0403\0\u6c02\0\u6c51\0\u0403"+
    "\0\u6ca0\0\u6cef\0\u6d3e\0\u0403\0\u6d8d\0\u0403\0\u6ddc\0\u0403"+
    "\0\u0403\0\u6e2b\0\u0403\0\u6e7a\0\u6ec9\0\u6f18\0\u0403\0\u0403"+
    "\0\u0403\0\u0403\0\u6f67\0\u0403\0\u6fb6\0\u7005\0\u7054\0\u70a3"+
    "\0\u70f2\0\u7141\0\u7190\0\u71df\0\u0403\0\u722e\0\u727d\0\u0403"+
    "\0\u72cc\0\u731b\0\u0403\0\u736a\0\u0403\0\u73b9\0\u7408\0\u7457"+
    "\0\u74a6\0\u74f5\0\u0403\0\u0403\0\u0403\0\u0403\0\u0403\0\u0403"+
    "\0\u0403\0\u7544\0\u7593\0\u0403\0\u0403\0\u0403\0\u0403\0\u75e2"+
    "\0\u0403\0\u7631\0\u7680\0\u76cf\0\u771e\0\u776d\0\u0403\0\u77bc"+
    "\0\u780b\0\u0768\0\u785a\0\u0768";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[524];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\2\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16"+
    "\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\7\1\27\1\30\1\31\1\25\1\32\1\33\1\34"+
    "\1\7\2\35\1\36\1\37\1\40\2\41\2\42\1\43"+
    "\1\16\1\44\1\45\2\46\1\47\1\27\1\50\1\51"+
    "\1\16\1\52\1\53\1\54\1\55\1\56\1\57\1\60"+
    "\1\45\1\37\1\16\7\20\1\61\1\62\1\63\1\64"+
    "\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74"+
    "\2\7\1\75\1\16\4\76\1\77\3\76\1\100\4\76"+
    "\1\100\4\76\1\100\5\76\1\100\1\76\36\100\26\76"+
    "\1\100\4\76\1\101\3\76\1\100\4\76\1\100\4\76"+
    "\1\100\5\76\1\100\1\76\36\100\26\76\1\100\5\76"+
    "\1\102\2\76\1\102\1\76\1\102\2\76\1\102\4\76"+
    "\1\102\5\76\1\102\1\76\45\102\17\76\1\102\1\103"+
    "\2\76\1\104\13\103\3\76\3\103\1\76\51\103\2\76"+
    "\2\103\1\76\5\103\1\76\1\103\1\76\3\103\3\76"+
    "\1\104\113\76\117\0\1\105\2\0\1\106\13\105\3\0"+
    "\3\105\1\0\51\105\2\0\2\105\1\0\1\105\1\107"+
    "\3\105\1\0\1\105\1\0\3\105\105\0\1\110\16\0"+
    "\1\111\2\0\1\111\1\0\1\111\2\0\1\111\4\0"+
    "\1\111\5\0\1\111\1\0\45\111\17\0\1\111\4\0"+
    "\1\112\117\0\1\113\2\0\1\113\1\0\1\113\2\0"+
    "\1\113\4\0\1\113\5\0\1\113\1\0\45\113\17\0"+
    "\1\113\10\0\1\114\4\0\1\114\4\0\1\114\7\0"+
    "\36\114\33\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\36\16\7\115"+
    "\16\0\1\75\1\16\12\0\1\117\1\120\54\0\7\117"+
    "\32\0\1\20\1\121\1\0\1\122\52\0\7\20\32\0"+
    "\1\121\55\0\7\121\32\0\1\123\1\124\54\0\7\123"+
    "\24\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\125\5\0\2\115\12\16\1\126\5\16"+
    "\1\125\15\16\7\115\16\0\1\75\1\16\16\127\1\130"+
    "\1\0\1\127\1\131\75\127\17\132\1\0\1\133\1\134"+
    "\75\132\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\2\16\1\135"+
    "\14\16\1\136\11\16\1\135\4\16\7\115\16\0\1\75"+
    "\1\16\17\0\1\137\4\0\1\140\1\137\110\0\1\141"+
    "\5\0\1\141\1\0\1\142\73\0\1\12\1\115\2\0"+
    "\3\115\1\116\1\0\1\115\4\0\1\115\5\0\47\115"+
    "\17\0\1\115\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\143\5\0\2\115\2\16"+
    "\1\144\6\16\1\145\5\16\1\146\1\143\3\16\1\147"+
    "\4\16\1\144\4\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\2\150\1\16\1\151\7\16"+
    "\1\152\6\16\1\153\7\16\1\154\1\16\1\151\1\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\155\4\0\1\16\5\0"+
    "\2\115\2\16\1\156\6\16\1\157\3\16\2\160\2\16"+
    "\1\161\5\16\1\162\1\16\1\156\4\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\5\16"+
    "\2\163\27\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\164\4\0"+
    "\1\16\5\0\2\115\2\16\1\165\14\16\1\166\11\16"+
    "\1\165\4\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\2\16\1\167\2\16\2\170\2\16"+
    "\1\171\1\16\1\172\15\16\1\167\4\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\173\5\0\2\115\3\16"+
    "\1\174\3\16\2\175\7\16\1\176\13\16\1\174\1\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\2\16\1\177\6\16\1\200\2\16\1\201\2\16"+
    "\1\202\11\16\1\177\1\16\1\201\2\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\203\4\0\1\16\5\0\2\115\5\16"+
    "\2\204\4\16\1\205\3\16\1\206\16\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\5\16"+
    "\2\207\2\16\1\210\23\16\1\211\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\4\16\1\212"+
    "\2\213\2\214\25\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\215\5\0\2\115\3\16\1\216\10\16\1\217"+
    "\3\16\1\215\1\220\11\16\1\217\1\216\1\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\221\4\0\1\16\5\0\2\115"+
    "\2\16\1\222\2\16\2\223\2\16\1\224\17\16\1\222"+
    "\4\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\225\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\2\16\1\226\6\16\1\227"+
    "\5\16\1\230\2\16\1\231\6\16\1\226\4\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\11\16\1\232\15\16\1\233\6\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\2\16\1\234"+
    "\14\16\1\235\11\16\1\234\4\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\5\16\2\236"+
    "\27\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\2\16\1\237\26\16\1\237\4\16\7\115"+
    "\16\0\1\75\1\16\103\0\1\240\117\0\1\241\117\0"+
    "\1\242\122\0\1\243\5\0\17\74\1\0\73\74\2\0"+
    "\2\74\10\0\1\75\4\0\1\75\4\0\1\75\7\0"+
    "\36\75\25\0\2\75\4\0\1\244\1\245\2\0\3\245"+
    "\1\246\1\0\1\245\4\0\1\245\5\0\47\245\17\0"+
    "\1\245\5\0\1\102\2\0\3\102\1\247\1\0\1\102"+
    "\4\0\1\102\5\0\47\102\17\0\1\102\1\103\3\0"+
    "\13\103\3\0\3\103\1\0\51\103\2\0\2\103\1\0"+
    "\5\103\1\0\1\103\1\0\3\103\1\105\2\0\1\106"+
    "\13\105\3\0\3\105\1\0\51\105\2\0\2\105\1\0"+
    "\5\105\1\0\1\105\1\0\3\105\5\0\1\111\2\0"+
    "\3\111\1\250\1\0\1\111\4\0\1\111\5\0\47\111"+
    "\17\0\1\111\5\0\1\251\2\0\1\251\1\0\1\251"+
    "\2\0\1\251\4\0\1\251\5\0\1\251\1\0\45\251"+
    "\17\0\1\251\5\0\1\113\2\0\1\113\1\0\1\113"+
    "\2\0\1\113\4\0\1\113\5\0\47\113\17\0\1\113"+
    "\10\0\1\114\1\252\3\0\1\114\4\0\1\114\7\0"+
    "\36\114\34\0\1\115\2\0\3\115\1\116\1\0\1\115"+
    "\4\0\1\115\5\0\47\115\17\0\1\115\12\0\1\117"+
    "\1\253\1\0\1\254\52\0\7\117\32\0\1\253\55\0"+
    "\7\253\32\0\1\121\2\0\1\122\52\0\7\121\31\0"+
    "\1\255\1\256\1\0\1\255\53\0\7\256\32\0\1\123"+
    "\1\257\1\0\1\260\52\0\7\123\32\0\1\257\55\0"+
    "\7\257\24\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\14\16\1\261"+
    "\16\16\1\261\2\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\11\16\1\262\24\16\7\115"+
    "\16\0\1\75\1\16\16\127\1\263\1\0\1\127\1\131"+
    "\75\127\16\0\1\264\116\0\1\127\1\0\3\127\10\0"+
    "\1\127\4\0\1\127\1\0\1\127\5\0\1\127\46\0"+
    "\17\132\1\0\1\263\1\134\75\132\20\0\1\265\114\0"+
    "\1\132\1\0\3\132\10\0\1\132\4\0\1\132\1\0"+
    "\1\132\5\0\1\132\52\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\25\16\1\266\10\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\15\16\2\267\7\16\1\270"+
    "\7\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\17\16\1\271\16\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\3\16\1\272"+
    "\30\16\1\272\1\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\273\5\0\2\115\20\16\1\273\15\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\21\16\1\274\14\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\3\16\1\275\30\16\1\275"+
    "\1\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\23\16\1\276\12\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\13\16\1\277"+
    "\22\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\22\16\1\300\13\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\30\16\1\301"+
    "\5\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\5\16\2\302\4\16\1\303\1\304\16\16"+
    "\1\304\2\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\25\16\1\305\10\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\13\16"+
    "\1\306\22\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\5\16\2\307\27\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\2\310"+
    "\23\16\1\311\10\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\2\16\1\312\26\16\1\312"+
    "\4\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\313\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\4\16\1\314\15\16\1\315"+
    "\5\16\1\316\5\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\317\5\0\2\115\20\16\1\317\15\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\21\16\1\320\14\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\13\16\1\321\22\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\17\16\1\322\16\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\13\16\1\323\22\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\17\16\1\324\16\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\3\16\1\325\30\16\1\325"+
    "\1\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\326"+
    "\5\0\2\115\2\327\7\16\1\330\1\16\1\331\4\16"+
    "\1\326\1\332\14\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\333\5\0\2\115\20\16\1\333\15\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\25\16\1\334\10\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\2\16\1\335\26\16\1\335"+
    "\4\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\2\16\1\336\26\16\1\336\4\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\11\16\1\337\24\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\340"+
    "\4\0\1\16\5\0\2\115\36\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\341\4\0\1\16\5\0\2\115\36\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\342\5\0\2\115"+
    "\2\16\1\343\1\16\1\344\13\16\1\342\1\345\7\16"+
    "\1\343\4\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\21\16\1\346\14\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\25\16"+
    "\1\347\10\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\15\16\2\350\17\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\22\16"+
    "\1\351\13\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\7\16\2\352\25\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\11\16"+
    "\1\353\24\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\11\16\1\354\24\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\2\16"+
    "\1\355\26\16\1\355\4\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\11\16\1\356\24\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\3\16\1\357\3\16\2\360\2\16\1\361\20\16"+
    "\1\357\1\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\15\16\2\362\5\16\1\363\11\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\17\16\1\364\16\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\3\16\1\365\30\16"+
    "\1\365\1\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\2\16\1\366\26\16\1\366\4\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\12\16\1\367\23\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\370\5\0\2\115\20\16\1\370\15\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\371\5\0"+
    "\2\115\20\16\1\371\11\16\1\372\3\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\36\16"+
    "\1\373\6\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\15\16\2\374\17\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\375\4\0\1\16\5\0\2\115\36\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\32\16\1\376\3\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\21\16\1\377\14\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\2\16\1\u0100\14\16\1\u0101\11\16\1\u0100\4\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\13\16\1\u0102\22\16\7\115\16\0\1\75\1\16\5\0"+
    "\1\245\2\0\3\245\1\246\1\0\1\245\4\0\1\245"+
    "\5\0\47\245\17\0\1\245\5\0\1\251\2\0\3\251"+
    "\1\u0103\1\0\1\251\4\0\1\251\5\0\47\251\17\0"+
    "\1\251\10\0\1\u0104\1\0\1\u0104\2\0\1\u0104\4\0"+
    "\1\u0104\7\0\45\u0104\32\0\1\253\2\0\1\254\52\0"+
    "\7\253\31\0\1\u0105\1\u0106\1\0\1\u0105\53\0\7\u0106"+
    "\32\0\1\256\55\0\7\256\32\0\1\257\2\0\1\260"+
    "\52\0\7\257\31\0\1\u0107\1\u0108\1\0\1\u0107\53\0"+
    "\7\u0108\24\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\17\16\1\u0109"+
    "\16\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\3\16\1\u010a\30\16\1\u010a\1\16\7\115"+
    "\16\0\1\75\1\16\16\264\1\u010b\2\264\1\u010c\75\264"+
    "\20\265\1\u010d\1\u010e\75\265\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\u010f\4\0\1\16\5\0"+
    "\2\115\36\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\22\16\1\u0110\13\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\u0111\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\22\16\1\u0112\13\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\u0113\5\0\2\115\20\16\1\u0113\15\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\32\16\1\u0114\3\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\u0115\4\0\1\16\5\0\2\115\36\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\17\16"+
    "\1\u0116\16\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\u0117\4\0"+
    "\1\16\5\0\2\115\4\16\1\u0118\31\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\u0119\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\u011a\4\0\1\16\5\0"+
    "\2\115\2\u011b\1\u011c\1\u011d\7\16\1\u011e\5\16\1\u011f"+
    "\1\u0120\6\16\1\u011c\2\16\1\u011d\1\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\3\16"+
    "\1\u0121\30\16\1\u0121\1\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\36\16\1\u0122\1\u0123"+
    "\1\u0124\1\115\1\u0125\2\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\7\16\2\u0126\25\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\13\16\1\u0127\22\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\21\16\1\u0128\14\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\u0129\4\0\1\16\5\0\2\115"+
    "\36\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\22\16\1\u012a\13\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\u012b\5\0\2\115\20\16\1\u012b"+
    "\15\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\3\16\1\u012c\30\16\1\u012c\1\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\25\16\1\u012d\10\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\15\16\2\u012e\17\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\5\16\2\u012f\27\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\u0130"+
    "\4\0\1\16\5\0\2\115\36\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\21\16\1\u0131"+
    "\14\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\13\16\1\u0132\22\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\5\16\2\u0133"+
    "\27\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\11\16\1\u0134\24\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\5\16\2\u0135"+
    "\27\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\30\16\1\u0136\5\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\11\16\1\u0137"+
    "\24\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\3\16\1\u0138\30\16\1\u0138\1\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\22\16\1\u0139\13\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\13\16\1\u013a\22\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\2\16\1\u013b\26\16\1\u013b\4\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\2\16\1\u013c"+
    "\26\16\1\u013c\4\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\3\16\1\u013d\10\16\1\u013e"+
    "\2\u013f\14\16\1\u013e\1\u013d\1\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\13\16\1\u0140"+
    "\22\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\24\16\1\u0141\11\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\u0142\5\0\2\115\20\16\1\u0142"+
    "\15\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\u0143\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\u0144"+
    "\4\0\1\16\5\0\2\115\36\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\11\16\1\u0145"+
    "\24\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\u0146\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\3\16\1\u0147\30\16\1\u0147"+
    "\1\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\17\16\1\u0148\16\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\u0149\5\0\2\115\20\16\1\u0149"+
    "\15\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\3\16\1\u014a\30\16\1\u014a\1\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\22\16\1\u014b\13\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\14\16\1\u014c\16\16\1\u014c"+
    "\2\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\2\16\1\u014d\26\16\1\u014d\4\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\u014e\4\0\1\16\5\0\2\115"+
    "\36\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\2\16\1\u014f\26\16\1\u014f\4\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\4\16\1\u0150\31\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\15\16\2\u0151\17\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\5\16\2\u0152\27\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\21\16\1\u0153\14\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\15\16\2\u0154\17\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\u0155"+
    "\4\0\1\16\5\0\2\115\36\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\27\16\1\u0156"+
    "\6\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\5\16\2\u0157\27\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\11\16\1\u0158"+
    "\24\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\5\16\2\u0159\27\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\4\16\1\u015a"+
    "\31\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\21\16\1\u015b\14\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\21\16\1\u015c"+
    "\14\16\7\115\16\0\1\75\1\16\10\0\1\u0104\1\252"+
    "\1\u0104\2\0\1\u0104\4\0\1\u0104\7\0\45\u0104\32\0"+
    "\1\u0106\55\0\7\u0106\32\0\1\u0108\55\0\7\u0108\24\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\22\16\1\u015d\13\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\15\16\2\u015e\17\16\7\115\16\0\1\75\1\16\16\264"+
    "\1\u015f\2\264\1\u010c\75\264\16\0\1\264\1\0\3\264"+
    "\10\0\1\264\4\0\1\264\1\0\1\264\5\0\1\264"+
    "\46\0\20\265\1\u0160\1\u010e\75\265\16\0\1\265\1\0"+
    "\3\265\10\0\1\265\4\0\1\265\1\0\1\265\5\0"+
    "\1\265\52\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\22\16\1\u0161"+
    "\13\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\u0162\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\22\16\1\u0163\13\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\11\16\1\u0164\24\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\14\16\1\u0165\16\16\1\u0165"+
    "\2\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\u0166"+
    "\5\0\2\115\20\16\1\u0166\15\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\15\16\2\u0167"+
    "\17\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\13\16\1\u0168\22\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\u0169\5\0\2\115\20\16\1\u0169"+
    "\15\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\u016a"+
    "\5\0\2\115\20\16\1\u016a\15\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\u016b\4\0\1\16\5\0\2\115\36\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\7\16\2\u016c\25\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\15\16\2\u016d\17\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\u016e\4\0\1\16\5\0\2\115"+
    "\2\16\1\u016f\26\16\1\u016f\4\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\21\16\1\u0170"+
    "\14\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\15\16\2\u0171\17\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\15\16\2\u0172"+
    "\17\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\3\115\1\116\1\0\1\115\4\0\1\115\5\0"+
    "\41\115\1\u0173\5\115\17\0\1\115\4\0\1\12\1\115"+
    "\2\0\3\115\1\116\1\0\1\115\4\0\1\115\5\0"+
    "\40\115\1\u0174\6\115\17\0\1\115\4\0\1\12\1\115"+
    "\2\0\3\115\1\116\1\0\1\115\4\0\1\115\5\0"+
    "\45\115\1\u0175\1\115\17\0\1\115\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\11\16\1\u0176\24\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\2\16\1\u0177"+
    "\26\16\1\u0177\4\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\14\16\1\u0178\16\16\1\u0178"+
    "\2\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\12\16\1\u0179\23\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\22\16\1\u017a"+
    "\13\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\u017b\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\u017c"+
    "\4\0\1\16\5\0\2\115\36\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\5\16\2\u017d"+
    "\27\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\25\16\1\u017e\10\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\2\16\1\u017f"+
    "\26\16\1\u017f\4\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\11\16\1\u0180\24\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\15\16\2\u0181\17\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\11\16\1\u0182\24\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\25\16\1\u0183\10\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\15\16\2\u0184\17\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\u0185\4\0\1\16\5\0\2\115"+
    "\36\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\15\16\2\u0186\17\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\5\16\2\u0187"+
    "\27\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\15\16\2\u0188\17\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\31\16\1\u0189"+
    "\1\16\1\u0189\2\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\2\16\1\u018a\26\16\1\u018a"+
    "\4\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\u018b\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\15\16\2\u018c\17\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\35\16\1\u018d\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\17\16\1\u018e\16\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\5\16"+
    "\2\u018f\27\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\u0190\4\0"+
    "\1\16\5\0\2\115\36\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\u0191\5\0\2\115\20\16\1\u0191\15\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\30\16\1\u0192\5\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\u0193\4\0\1\16\5\0\2\115\36\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\5\16"+
    "\2\u0194\27\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\21\16\1\u0195\14\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\15\16"+
    "\2\u0196\17\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\15\16\2\u0197\17\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\11\16"+
    "\1\u0198\24\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\3\16\1\u0199\11\16\2\u019a\15\16"+
    "\1\u0199\1\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\27\16\1\u019b\6\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\u019c\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\u019d\5\0"+
    "\2\115\20\16\1\u019d\15\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\3\16\1\u019e\30\16"+
    "\1\u019e\1\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\27\16\1\u019f\6\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\4\16"+
    "\1\u01a0\31\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\u01a1\4\0"+
    "\1\16\5\0\2\115\36\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\u01a2\4\0\1\16\5\0\2\115\36\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\3\16"+
    "\1\u01a3\30\16\1\u01a3\1\16\7\115\16\0\1\75\1\16"+
    "\16\264\1\263\2\264\1\u010c\75\264\20\265\1\263\1\u010e"+
    "\75\265\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\14\16\1\u01a4"+
    "\16\16\1\u01a4\2\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\15\16\2\u01a5\17\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\22\16\1\u01a6\13\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\u01a7"+
    "\4\0\1\16\5\0\2\115\36\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\u01a8\4\0\1\16\5\0\2\115\36\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\15\16\2\u01a9\17\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\22\16\1\u01aa\13\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\7\16\2\u01ab\25\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\15\16\2\u01ac\17\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\2\16\1\u01ad\26\16\1\u01ad\4\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\u01ae\5\0\2\115\20\16\1\u01ae"+
    "\15\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\u01af"+
    "\5\0\2\115\20\16\1\u01af\15\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\11\16\1\u01b0"+
    "\24\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\5\16\2\u01b1\27\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\3\115\1\116\1\0"+
    "\1\115\4\0\1\115\5\0\42\115\1\u01b2\4\115\17\0"+
    "\1\115\4\0\1\12\1\115\2\0\3\115\1\116\1\0"+
    "\1\115\4\0\1\115\5\0\43\115\1\u01b3\3\115\17\0"+
    "\1\115\4\0\1\12\1\115\2\0\3\115\1\116\1\0"+
    "\1\115\4\0\1\115\5\0\46\115\1\u01b4\17\0\1\115"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\12\16\1\u01b5\23\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\14\16\1\u01b6\16\16\1\u01b6\2\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\u01b7\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\5\16\2\u01b8\27\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\15\16\2\u01b9\17\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\u01ba\4\0\1\16\5\0"+
    "\2\115\36\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\u01bb\5\0\2\115\20\16\1\u01bb\15\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\u01bc\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\2\16\1\u01bd\31\16\1\u01bd\1\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\u01be\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\5\16\2\u01bf\27\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\15\16\2\u01c0\17\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\11\16\1\u01c1\24\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\3\16\1\u01c2\30\16"+
    "\1\u01c2\1\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\17\16\1\u01c3\16\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\u01c4\5\0\2\115\20\16"+
    "\1\u01c4\15\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\15\16\2\u01c5\17\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\11\16"+
    "\1\u01c6\24\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\13\16\1\u01c7\22\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\u01c8\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\24\16\1\u01c9\11\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\u01ca\5\0\2\115\20\16\1\u01ca\15\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\u01cb\4\0\1\16\5\0"+
    "\2\115\36\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\30\16\1\u01cc\5\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\u01cd\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\3\16\1\u01ce\30\16\1\u01ce\1\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\u01cf\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\u01d0\4\0\1\16\5\0"+
    "\2\115\36\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\3\16\1\u01d1\30\16\1\u01d1\1\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\5\16\2\u01d2\27\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\3\16\1\u01d3\30\16"+
    "\1\u01d3\1\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\17\16\1\u01d4\16\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\u01d5\4\0\1\16\5\0\2\115\36\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\5\16\2\u01d6\27\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\30\16\1\u01d7\5\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\16\5\0"+
    "\2\115\22\16\1\u01d8\13\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\u01d9\4\0\1\16\5\0\2\115\36\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\22\16"+
    "\1\u01da\13\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\5\16\2\u01db\27\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\23\16"+
    "\1\u01dc\12\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\5\16\2\u01dd\27\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\16\5\0\2\115\15\16"+
    "\2\u01de\17\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\21\16\1\u01df\14\16\7\115\16\0"+
    "\1\75\1\16\4\0\1\12\1\115\2\0\1\16\2\115"+
    "\1\116\1\0\1\16\4\0\1\u01e0\5\0\2\115\20\16"+
    "\1\u01e0\15\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\14\16\1\u01e1\16\16\1\u01e1\2\16"+
    "\7\115\16\0\1\75\1\16\4\0\1\12\1\115\2\0"+
    "\1\16\2\115\1\116\1\0\1\16\4\0\1\u01e2\5\0"+
    "\2\115\20\16\1\u01e2\15\16\7\115\16\0\1\75\1\16"+
    "\4\0\1\12\1\115\2\0\1\16\2\115\1\116\1\0"+
    "\1\16\4\0\1\16\5\0\2\115\2\16\1\u01e3\26\16"+
    "\1\u01e3\4\16\7\115\16\0\1\75\1\16\4\0\1\12"+
    "\1\115\2\0\1\16\2\115\1\116\1\0\1\16\4\0"+
    "\1\16\5\0\2\115\2\u01e4\34\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\15\16\2\u01e5"+
    "\17\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\4\16\1\u01e6\31\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\14\16\1\u01e7"+
    "\16\16\1\u01e7\2\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\3\16\1\u01e8\30\16\1\u01e8"+
    "\1\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\3\115\1\116\1\0\1\115\4\0\1\115\5\0"+
    "\16\115\1\u01e9\16\115\1\u01e9\11\115\17\0\1\115\4\0"+
    "\1\12\1\115\2\0\3\115\1\116\1\0\1\115\4\0"+
    "\1\115\5\0\11\115\2\u01ea\34\115\17\0\1\115\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\25\16\1\u01eb\10\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\5\16\2\u01ec\27\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\5\16\2\u01ed\27\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\15\16\2\u01ee\17\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\11\16\1\u01ef\24\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\2\16\1\u01f0\26\16\1\u01f0\4\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\14\16\1\u01f1"+
    "\16\16\1\u01f1\2\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\14\16\1\u01f2\16\16\1\u01f2"+
    "\2\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\3\16\1\u01f3\30\16\1\u01f3\1\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\u01f4\4\0\1\16\5\0\2\115"+
    "\36\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\u01f5\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\13\16\1\u01f6\22\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\u01f7\4\0\1\16\5\0\2\115"+
    "\36\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\u01f8\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\15\16\2\u01f9\17\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\3\115"+
    "\1\116\1\0\1\115\4\0\1\115\5\0\21\115\1\u01fa"+
    "\25\115\17\0\1\115\4\0\1\12\1\115\2\0\3\115"+
    "\1\116\1\0\1\115\4\0\1\115\5\0\21\115\1\u01fb"+
    "\25\115\17\0\1\115\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\u01fc\4\0\1\16\5\0\2\115"+
    "\36\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\3\16\1\u01fd\30\16\1\u01fd\1\16\7\115"+
    "\16\0\1\75\1\16\4\0\1\12\1\115\2\0\1\16"+
    "\2\115\1\116\1\0\1\16\4\0\1\16\5\0\2\115"+
    "\14\16\1\u01fe\16\16\1\u01fe\2\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\13\16\1\u01ff"+
    "\22\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\16\4\0\1\16"+
    "\5\0\2\115\27\16\1\u0200\6\16\7\115\16\0\1\75"+
    "\1\16\4\0\1\12\1\115\2\0\1\16\2\115\1\116"+
    "\1\0\1\16\4\0\1\16\5\0\2\115\15\16\2\u0201"+
    "\17\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\3\115\1\116\1\0\1\115\4\0\1\u0202\5\0"+
    "\22\115\1\u0202\24\115\17\0\1\115\4\0\1\12\1\115"+
    "\2\0\3\115\1\116\1\0\1\115\4\0\1\115\5\0"+
    "\7\115\2\u0203\36\115\17\0\1\115\4\0\1\12\1\115"+
    "\2\0\1\16\2\115\1\116\1\0\1\u0204\4\0\1\16"+
    "\5\0\2\115\36\16\7\115\16\0\1\75\1\16\4\0"+
    "\1\12\1\115\2\0\3\115\1\116\1\0\1\115\4\0"+
    "\1\115\5\0\16\115\1\u0205\16\115\1\u0205\11\115\17\0"+
    "\1\115\4\0\1\12\1\u0206\2\0\3\115\1\116\1\0"+
    "\1\115\4\0\1\115\5\0\47\115\17\0\1\115\4\0"+
    "\1\12\1\115\2\0\1\16\2\115\1\116\1\0\1\16"+
    "\4\0\1\16\5\0\2\115\3\16\1\u0207\30\16\1\u0207"+
    "\1\16\7\115\16\0\1\75\1\16\4\0\1\12\1\115"+
    "\2\0\3\115\1\116\1\0\1\115\4\0\1\115\5\0"+
    "\4\115\1\u0208\26\115\1\u0208\13\115\17\0\1\115\4\0"+
    "\1\12\1\115\2\0\3\115\1\116\1\0\1\115\4\0"+
    "\1\115\5\0\23\115\1\u0209\23\115\17\0\1\115\4\0"+
    "\1\12\1\115\2\0\3\115\1\116\1\0\1\115\4\0"+
    "\1\115\5\0\17\115\2\u020a\26\115\17\0\1\115\4\0"+
    "\1\12\1\115\2\0\3\115\1\116\1\0\1\115\4\0"+
    "\1\115\5\0\7\115\2\u020b\36\115\17\0\1\115\4\0"+
    "\1\12\1\115\2\0\3\115\1\116\1\0\1\115\4\0"+
    "\1\115\5\0\13\115\1\u020c\33\115\17\0\1\115";

  private static int [] zzUnpackTrans() {
    int [] result = new int[30889];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\4\0\1\1\1\0\1\11\15\1\1\11\3\1\1\11"+
    "\1\1\1\11\25\1\4\11\2\1\1\11\1\1\2\11"+
    "\3\1\2\11\1\1\1\11\2\1\1\11\1\0\1\11"+
    "\1\1\1\11\1\1\1\0\2\1\2\0\1\1\1\0"+
    "\1\1\1\0\1\1\1\0\2\1\1\0\1\1\2\0"+
    "\1\1\1\0\2\1\1\0\1\11\1\0\1\11\75\1"+
    "\5\11\4\0\1\1\1\0\1\1\2\0\2\1\1\0"+
    "\2\1\1\11\2\0\115\1\1\0\1\1\1\0\1\1"+
    "\1\0\3\1\4\0\23\1\1\0\1\1\2\0\71\1"+
    "\2\0\22\1\3\0\127\1\1\0\1\1\1\0\31\1"+
    "\2\0\17\1\2\0\6\1\2\0\1\1\2\0\1\1"+
    "\2\0\1\1\1\0\1\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[524];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** this buffer may contains the current text array to be matched when it is cheap to acquire it */
  private char[] zzBufferArray;

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the textposition at the last state to be included in yytext */
  private int zzPushbackPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  _SparqlLexer(java.io.Reader in) {
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 2414) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }

  public final int getTokenStart(){
    return zzStartRead;
  }

  public final int getTokenEnd(){
    return getTokenStart() + yylength();
  }

  public void reset(CharSequence buffer, int start, int end,int initialState){
    zzBuffer = new char[buffer.length()];
    for (int i = 0; i < zzBuffer.length; i++) {
      zzBuffer[i] = buffer.charAt(i);
    }
    zzBufferArray = com.intellij.util.text.CharArrayUtil.fromSequenceWithoutCopying(buffer);
    zzCurrentPos = zzMarkedPos = zzStartRead = start;
    zzPushbackPos = 0;
    zzAtEOF  = false;
    zzAtBOL = true;
    zzEndRead = end;
    yybegin(initialState);
  }

  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }

  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }

  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }

  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public IElementType advance() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }

      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 1: 
          { yybegin(IRI_REF_END); return LIT_IRI_BODY;
          }
        case 157: break;
        case 2: 
          { return BAD_CHARACTER;
          }
        case 158: break;
        case 3: 
          { return OP_LT;
          }
        case 159: break;
        case 4: 
          { return OP_GT;
          }
        case 160: break;
        case 5: 
          { yypushback(yylength()); yybegin(PNAME_NS);
          }
        case 161: break;
        case 6: 
          { return UNKNOWN;
          }
        case 162: break;
        case 7: 
          { return OP_MINUS;
          }
        case 163: break;
        case 8: 
          { return LIT_INTEGER;
          }
        case 164: break;
        case 9: 
          { return OP_DOT;
          }
        case 165: break;
        case 10: 
          { return OP_PLUS;
          }
        case 166: break;
        case 11: 
          { return WHITE_SPACE;
          }
        case 167: break;
        case 12: 
          { return OP_LROUND;
          }
        case 168: break;
        case 13: 
          { return OP_RROUND;
          }
        case 169: break;
        case 14: 
          { return OP_LSQUARE;
          }
        case 170: break;
        case 15: 
          { return OP_RSQUARE;
          }
        case 171: break;
        case 16: 
          { return KW_A;
          }
        case 172: break;
        case 17: 
          { return OP_LCURLY;
          }
        case 173: break;
        case 18: 
          { return OP_RCURLY;
          }
        case 174: break;
        case 19: 
          { return OP_SEMI;
          }
        case 175: break;
        case 20: 
          { return OP_COMMA;
          }
        case 176: break;
        case 21: 
          { return OP_EQ;
          }
        case 177: break;
        case 22: 
          { return OP_NOT;
          }
        case 178: break;
        case 23: 
          { return OP_MULT;
          }
        case 179: break;
        case 24: 
          { return OP_DIV;
          }
        case 180: break;
        case 25: 
          { return COMMENT;
          }
        case 181: break;
        case 26: 
          { yybegin(YYINITIAL); return BAD_CHARACTER;
          }
        case 182: break;
        case 27: 
          { yybegin(YYINITIAL); return NAME_COLON;
          }
        case 183: break;
        case 28: 
          { yybegin(PNAME_LN2); return NAME_COLON;
          }
        case 184: break;
        case 29: 
          { yybegin(YYINITIAL); return NAME_LN;
          }
        case 185: break;
        case 30: 
          { yybegin(YYINITIAL); return LIT_IRI_END;
          }
        case 186: break;
        case 31: 
          // lookahead expression with fixed base length
          zzMarkedPos = Character.offsetByCodePoints
              (zzBufferL, zzStartRead, zzEndRead - zzStartRead, zzStartRead, 1);
          { yybegin(IRI_REF_BODY); return LIT_IRI_START;
          }
        case 187: break;
        case 32: 
          { return OP_LE;
          }
        case 188: break;
        case 33: 
          { return OP_GE;
          }
        case 189: break;
        case 34: 
          { yypushback(yylength()); yybegin(PNAME_LN);
          }
        case 190: break;
        case 35: 
          { return VAR;
          }
        case 191: break;
        case 36: 
          { return LANGTAG;
          }
        case 192: break;
        case 37: 
          { return LIT_INTEGER_NEG;
          }
        case 193: break;
        case 38: 
          { return LIT_DECIMAL;
          }
        case 194: break;
        case 39: 
          { return LIT_INTEGER_POS;
          }
        case 195: break;
        case 40: 
          { return LIT_STRING;
          }
        case 196: break;
        case 41: 
          { return LIT_NIL;
          }
        case 197: break;
        case 42: 
          { return LIT_ANON;
          }
        case 198: break;
        case 43: 
          { return KW_BY;
          }
        case 199: break;
        case 44: 
          { return KW_IF;
          }
        case 200: break;
        case 45: 
          { return KW_IN;
          }
        case 201: break;
        case 46: 
          { return KW_TZ;
          }
        case 202: break;
        case 47: 
          { return OP_PIPEPIPE;
          }
        case 203: break;
        case 48: 
          { return OP_ANDAND;
          }
        case 204: break;
        case 49: 
          { return OP_NE;
          }
        case 205: break;
        case 50: 
          { return OP_HATHAT;
          }
        case 206: break;
        case 51: 
          // lookahead expression with fixed lookahead length
          zzMarkedPos = Character.offsetByCodePoints
              (zzBufferL, zzStartRead, zzEndRead - zzStartRead, zzMarkedPos, -1);
          { return NAME_NS;
          }
        case 207: break;
        case 52: 
          { return LIT_BLANK_NODE;
          }
        case 208: break;
        case 53: 
          { return LIT_DECIMAL_NEG;
          }
        case 209: break;
        case 54: 
          { return LIT_DOUBLE;
          }
        case 210: break;
        case 55: 
          { return LIT_DECIMAL_POS;
          }
        case 211: break;
        case 56: 
          { return KW_NOT;
          }
        case 212: break;
        case 57: 
          { return KW_NOW;
          }
        case 213: break;
        case 58: 
          { return KW_ABS;
          }
        case 214: break;
        case 59: 
          { return KW_ASK;
          }
        case 215: break;
        case 60: 
          { return KW_ALL;
          }
        case 216: break;
        case 61: 
          { return KW_ADD;
          }
        case 217: break;
        case 62: 
          { return KW_AVG;
          }
        case 218: break;
        case 63: 
          { return KW_STR;
          }
        case 219: break;
        case 64: 
          { return KW_SUM;
          }
        case 220: break;
        case 65: 
          { return KW_DAY;
          }
        case 221: break;
        case 66: 
          { return KW_MAX;
          }
        case 222: break;
        case 67: 
          { return KW_MIN;
          }
        case 223: break;
        case 68: 
          { return KW_MD5;
          }
        case 224: break;
        case 69: 
          { return LIT_DOUBLE_NEG;
          }
        case 225: break;
        case 70: 
          { return LIT_DOUBLE_POS;
          }
        case 226: break;
        case 71: 
          { return KW_BASE;
          }
        case 227: break;
        case 72: 
          { return KW_BIND;
          }
        case 228: break;
        case 73: 
          { return KW_SHA1;
          }
        case 229: break;
        case 74: 
          { return KW_RAND;
          }
        case 230: break;
        case 75: 
          { return KW_FROM;
          }
        case 231: break;
        case 76: 
          { return KW_FLOOR;
          }
        case 232: break;
        case 77: 
          { return KW_LANG;
          }
        case 233: break;
        case 78: 
          { return KW_LOAD;
          }
        case 234: break;
        case 79: 
          { return KW_CEIL;
          }
        case 235: break;
        case 80: 
          { return KW_COPY;
          }
        case 236: break;
        case 81: 
          { return LIT_TRUE;
          }
        case 237: break;
        case 82: 
          { return KW_UUID;
          }
        case 238: break;
        case 83: 
          { return KW_DESC;
          }
        case 239: break;
        case 84: 
          { return KW_DATA;
          }
        case 240: break;
        case 85: 
          { return KW_DROP;
          }
        case 241: break;
        case 86: 
          { return KW_YEAR;
          }
        case 242: break;
        case 87: 
          { return KW_MOVE;
          }
        case 243: break;
        case 88: 
          { return KW_WITH;
          }
        case 244: break;
        case 89: 
          { return KW_NAMED;
          }
        case 245: break;
        case 90: 
          { return KW_BNODE;
          }
        case 246: break;
        case 91: 
          { return KW_BOUND;
          }
        case 247: break;
        case 92: 
          { return KW_STRDT;
          }
        case 248: break;
        case 93: 
          { return KW_REGEX;
          }
        case 249: break;
        case 94: 
          { return KW_ROUND;
          }
        case 250: break;
        case 95: 
          { return LIT_FALSE;
          }
        case 251: break;
        case 96: 
          { return KW_IS_IRI;
          }
        case 252: break;
        case 97: 
          { return KW_IS_URI;
          }
        case 253: break;
        case 98: 
          { return KW_LIMIT;
          }
        case 254: break;
        case 99: 
          { return KW_LCASE;
          }
        case 255: break;
        case 100: 
          { return KW_CLEAR;
          }
        case 256: break;
        case 101: 
          { return KW_COUNT;
          }
        case 257: break;
        case 102: 
          { return KW_ORDER;
          }
        case 258: break;
        case 103: 
          { return KW_UNION;
          }
        case 259: break;
        case 104: 
          { return KW_USING;
          }
        case 260: break;
        case 105: 
          { return KW_UCASE;
          }
        case 261: break;
        case 106: 
          { return KW_MINUS;
          }
        case 262: break;
        case 107: 
          { return KW_MONTH;
          }
        case 263: break;
        case 108: 
          { return KW_WHERE;
          }
        case 264: break;
        case 109: 
          { return KW_HOURS;
          }
        case 265: break;
        case 110: 
          { return KW_GRAPH;
          }
        case 266: break;
        case 111: 
          { return KW_GROUP;
          }
        case 267: break;
        case 112: 
          { return KW_EXISTS;
          }
        case 268: break;
        case 113: 
          { return KW_SELECT;
          }
        case 269: break;
        case 114: 
          { return KW_SAMPLE;
          }
        case 270: break;
        case 115: 
          { return KW_SILENT;
          }
        case 271: break;
        case 116: 
          { return KW_STRLEN;
          }
        case 272: break;
        case 117: 
          { return KW_SUBSTR;
          }
        case 273: break;
        case 118: 
          { return KW_SHA512;
          }
        case 274: break;
        case 119: 
          { return KW_SHA256;
          }
        case 275: break;
        case 120: 
          { return KW_SHA384;
          }
        case 276: break;
        case 121: 
          { return KW_PREFIX;
          }
        case 277: break;
        case 122: 
          { return KW_FILTER;
          }
        case 278: break;
        case 123: 
          { return KW_INSERT;
          }
        case 279: break;
        case 124: 
          { return KW_CREATE;
          }
        case 280: break;
        case 125: 
          { return KW_CONCAT;
          }
        case 281: break;
        case 126: 
          { return KW_OFFSET;
          }
        case 282: break;
        case 127: 
          { return KW_DELETE;
          }
        case 283: break;
        case 128: 
          { return KW_HAVING;
          }
        case 284: break;
        case 129: 
          { return KW_VALUES;
          }
        case 285: break;
        case 130: 
          { return KW_SERVICE;
          }
        case 286: break;
        case 131: 
          { return KW_SECONDS;
          }
        case 287: break;
        case 132: 
          { return KW_STRENDS;
          }
        case 288: break;
        case 133: 
          { return KW_STRLANG;
          }
        case 289: break;
        case 134: 
          { return KW_STRUUID;
          }
        case 290: break;
        case 135: 
          { return KW_REPLACE;
          }
        case 291: break;
        case 136: 
          { return KW_REDUCED;
          }
        case 292: break;
        case 137: 
          { return KW_IS_BLANK;
          }
        case 293: break;
        case 138: 
          { return KW_DEFAULT;
          }
        case 294: break;
        case 139: 
          { return KW_MINUTES;
          }
        case 295: break;
        case 140: 
          { return KW_SAME_TERM;
          }
        case 296: break;
        case 141: 
          { return KW_STRAFTER;
          }
        case 297: break;
        case 142: 
          { return KW_CONTAINS;
          }
        case 298: break;
        case 143: 
          { return KW_COALESCE;
          }
        case 299: break;
        case 144: 
          { return KW_TIMEZONE;
          }
        case 300: break;
        case 145: 
          { return KW_OPTIONAL;
          }
        case 301: break;
        case 146: 
          { return KW_DESCRIBE;
          }
        case 302: break;
        case 147: 
          { return KW_DATATYPE;
          }
        case 303: break;
        case 148: 
          { return KW_DISTINCT;
          }
        case 304: break;
        case 149: 
          { return KW_STRBEFORE;
          }
        case 305: break;
        case 150: 
          { return KW_STRSTARTS;
          }
        case 306: break;
        case 151: 
          { return KW_IS_NUMERIC;
          }
        case 307: break;
        case 152: 
          { return KW_IS_LITERAL;
          }
        case 308: break;
        case 153: 
          { return KW_CONSTRUCT;
          }
        case 309: break;
        case 154: 
          { return KW_LANGMATCHES;
          }
        case 310: break;
        case 155: 
          { return KW_GROUP_CONCAT;
          }
        case 311: break;
        case 156: 
          { return KW_ENCODE_FOR_URI;
          }
        case 312: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }

}
